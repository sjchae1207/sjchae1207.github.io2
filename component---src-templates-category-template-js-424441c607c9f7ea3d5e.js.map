{"version":3,"file":"component---src-templates-category-template-js-424441c607c9f7ea3d5e.js","mappings":"qJA+DA,IA3DA,SAAa,GAAyB,IAAvBA,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MAClBC,GAASC,EAAAA,EAAAA,gBAAjB,mBAiBMC,EAAkBJ,GAAeE,EAAAA,aAAvC,YACA,OACE,qBACEG,eAAgB,CAAEC,KAAM,MACxBL,MAFF,EAGEM,aAAcL,EAAAA,aAHhB,MAIEM,KAAM,CACJ,CACEC,SADF,WAEEC,QAAST,GAEX,CACEQ,SADF,gBAEEC,QAAST,GAEX,CACEU,KADF,cAEED,QAASN,GAEX,CACEK,SADF,iBAEEC,QAASN,GAEX,CACEK,SADF,YAEEC,QAASR,EAAAA,aAAAA,OAAyBS,MAEpC,CACEF,SADF,WAEEC,QAASR,EAAAA,aAAkBU,SAG7B,CACEH,SADF,UAEEC,QAAQ,gB,qHC5ClB,MATA,SAA4B,GAAsB,IAApBT,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SACnC,OACE,uBAAKC,UAAU,gCACb,uBAAKA,UAAU,uBADjB,GAEE,uBAAKA,UAAU,0BAHnB,K,UCoCF,MA/BA,SAA0B,GAAkB,IAAhBC,EAAe,EAAfA,YAClBC,EAA2BD,EAAnC,MAAeE,EAAoBF,EAAnC,gBACQG,EAAeH,EAAvB,WACMI,GAAkBC,EAAAA,EAAAA,UACtB,kBAAMF,EAAA,WAAqB,mBAAcG,IAAd,OAC3B,CAACH,EAFH,IAIMI,EAAQN,EAAA,KAAU,gBAAGO,EAAH,cAAc,QAAd,MAElBC,GAAmBC,EAAAA,EAAAA,cACvB,cACE,OAAIC,EAAa,OAAOC,EAAAA,EAAAA,UAAP,WACjBA,EAAAA,EAAAA,UAAS,UAAUT,EAAnBS,MAEF,CALF,IAQA,OACE,yBACE,qBAAK1B,MAAM,UACX,mBAAoBA,MAAOiB,EAA3B,GAAwDL,SAAaS,EAAL,kBAChE,qBACEM,SADF,EAEEC,SAFF,EAGEC,KAHF,EAIER,MAAOA","sources":["webpack://zoomkoding.com/./src/components/seo/index.js","webpack://zoomkoding.com/./src/components/category-page-header/index.js","webpack://zoomkoding.com/./src/templates/category-template.js"],"sourcesContent":["import { useStaticQuery, graphql } from 'gatsby';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nfunction Seo({ description, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              name\n            }\n            ogImage\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  return (\n    <Helmet\n      htmlAttributes={{ lang: 'en' }}\n      title={title}\n      defaultTitle={site.siteMetadata.title}\n      meta={[\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:site_title`,\n          content: title,\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:author',\n          content: site.siteMetadata.author.name,\n        },\n        {\n          property: 'og:image',\n          content: site.siteMetadata.ogImage,\n        },\n\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ]}\n    />\n  );\n}\n\nexport default Seo;\n","import React from 'react';\nimport './style.scss';\n\nfunction CategoryPageHeader({ title, subtitle }) {\n  return (\n    <div className=\"category-page-header-wrapper\">\n      <div className=\"category-page-title\">{title}</div>\n      <div className=\"category-page-subtitle\">{subtitle}</div>\n    </div>\n  );\n}\n\nexport default CategoryPageHeader;\n","import React, { useMemo, useCallback } from 'react';\nimport { navigate } from 'gatsby';\n\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Post from '../models/post';\nimport CategoryPageHeader from '../components/category-page-header';\nimport PostTabs from '../components/post-tabs';\n\nfunction CategoryTemplate({ pageContext }) {\n  const { edges, currentCategory } = pageContext;\n  const { categories } = pageContext;\n  const currentTabIndex = useMemo(\n    () => categories.findIndex((category) => category === currentCategory),\n    [categories, currentCategory],\n  );\n  const posts = edges.map(({ node }) => new Post(node));\n\n  const onTabIndexChange = useCallback(\n    (e, value) => {\n      if (value === 0) return navigate(`/posts`);\n      navigate(`/posts/${categories[value]}`);\n    },\n    [categories],\n  );\n\n  return (\n    <Layout>\n      <Seo title=\"Posts\" />\n      <CategoryPageHeader title={categories[currentTabIndex]} subtitle={`${posts.length} posts`} />\n      <PostTabs\n        tabIndex={currentTabIndex}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        posts={posts}\n      />\n    </Layout>\n  );\n}\n\nexport default CategoryTemplate;\n"],"names":["description","title","site","useStaticQuery","metaDescription","htmlAttributes","lang","defaultTitle","meta","property","content","name","ogImage","subtitle","className","pageContext","edges","currentCategory","categories","currentTabIndex","useMemo","category","posts","node","onTabIndexChange","useCallback","value","navigate","tabIndex","onChange","tabs"],"sourceRoot":""}